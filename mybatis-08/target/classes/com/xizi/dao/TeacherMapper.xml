<?xml version="1.0" encoding="UTF8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xizi.dao.TeacherMapper">

        
        <select id="getTeacher" resultType="Teacher">
                select * from mybatis.teacher
        </select>

        <!--按结果嵌套查询-->
        <select id="getTeacher1" resultMap="TeacherStudent">
                select s.id sid, s.name sname, t.name tname ,t.id tid
                from student s,teacher t
                where s.tid=t.id and t.id=#{tid}
        </select>

        <resultMap id="TeacherStudent" type="Teacher">
                <result property="id" column="tid"></result>
                <result property="name" column="tname"></result>
                <!--复杂得属性 我们需要单独处理 对象 association 集合 collection-->
                <!--javaType="" 指定属性得类型
                集合中得泛型信息 我们用ofType获取
                -->
                <collection property="students" ofType="Student">
                        <result property="id" column="sid"></result>
                        <result property="name" column="sname"></result>
                        <result property="tid" column="tid"></result>
                </collection>
        </resultMap>



        <!--子查询-->
        <select id="getTeacher2" resultMap="TeacherStudent2">
                select * from mybatis.teacher where id =#{tid}
        </select>
        <resultMap id="TeacherStudent2" type="Teacher">
                <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="id" ></collection>
        </resultMap>
        <select id="getStudentByTeacherId" resultType="Student">
                select * from mybatis.student  where tid =#{tid}
        </select>




</mapper>



